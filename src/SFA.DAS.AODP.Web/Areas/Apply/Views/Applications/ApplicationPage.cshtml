@using SFA.DAS.AODP.Web.Helpers.ApplicationPageViewHelpers
@using SFA.DAS.AODP.Web.Models.Application
@model ApplicationPageViewModel

@{
    ViewData["Title"] = Model.Title;
    ViewBag.IsSubmitted = Model.IsSubmitted;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <govuk-back-link class="govuk-link govuk-task-list__link"
                         asp-action="ViewApplicationSection"
                         asp-route-sectionId="@Model.SectionId"
                         asp-controller="Applications"
                         asp-route-formVersionId="@Model.FormVersionId"
                         asp-route-organisationId="@Model.OrganisationId"
                         asp-route-applicationId="@Model.ApplicationId">Back to view section</govuk-back-link>

        <partial name="~/Views/Shared/_NotificationPartial.cshtml" />

        @if (!ViewContext.ModelState.IsValid)
        {
            <div class="govuk-error-summary" data-module="govuk-error-summary">
                <div role="alert">
                    <h2 class="govuk-error-summary__title">
                        There is a problem
                    </h2>
                    <div class="govuk-error-summary__body">
                        <ul class="govuk-list govuk-error-summary__list">
                            @{
                                // Sort ModelState errors based on the Questions.Order property
                                var orderedErrors = ViewContext.ModelState
                                .Where(ms => ms.Value.Errors.Any())
                                .Select(ms => new
                                {
                                    Key = ms.Key,
                                    ErrorMessage = ms.Value.Errors.FirstOrDefault()?.ErrorMessage,
                                    Question = ApplicationPageErrorHelper.GetQuestionByErrorKey(Model.Questions, ms.Key)
                                })
                                .Where(e => e.Question != null)
                                .OrderBy(e => e.Question.Order);

                                foreach (var error in orderedErrors)
                                {
                                    var question = error.Question;
                                    string href = $"#question-{question.Id}";

                                    if (question.Type == SFA.DAS.AODP.Models.Forms.QuestionType.Date)
                                    {
                                        href = $"#Questions[{question.Order - 1}][Answer][DateValue.Day]";
                                    }

                                    <li>
                                        <a href="@href">Question @(question.Order). @error.ErrorMessage</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }



        <form asp-controller="Applications" asp-action="ApplicationPage" method="post" enctype="multipart/form-data">
            <fieldset class="govuk-fieldset" disabled="@Model.IsSubmitted">
                @Html.HiddenFor(m => m.OrganisationId)
                @Html.HiddenFor(m => m.PageId)
                @Html.HiddenFor(m => m.FormVersionId)
                @Html.HiddenFor(m => m.ApplicationId)
                @Html.HiddenFor(m => m.SectionId)
                @Html.HiddenFor(m => m.Order)
                @if (Model.Questions.Count == 1)
                {
                    <span class="govuk-caption-xl">@Model.Title</span>
                }
                else
                {
                    <h1 class="govuk-heading-l">@Model.Title</h1>
                }

                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    await Html.RenderPartialAsync("Application/Question", Model.Questions[i]);
                }
            </fieldset>
            @if (Model.IsSubmitted)
            {
                <a class="govuk-button govuk-button--secondary"
                                 asp-action="ViewApplicationSection"
                                 asp-route-sectionId="@Model.SectionId"
                                 asp-controller="Applications"
                                 asp-route-formVersionId="@Model.FormVersionId"
                                 asp-route-organisationId="@Model.OrganisationId"
                                 asp-route-applicationId="@Model.ApplicationId">Back to view section</a>
            }
            else
            {
                <govuk-button type="submit">Save and continue</govuk-button>
            }
        </form>

    </div>
</div>
