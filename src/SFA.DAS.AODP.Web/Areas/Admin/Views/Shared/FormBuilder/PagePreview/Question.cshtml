@using SFA.DAS.AODP.Models.Forms
@using SFA.DAS.AODP.Web.Models.Application
@using SFA.DAS.AODP.Web.Models.GdsComponents
@model GetPagePreviewByIdQueryResponse.Question

<div class="govuk-form-group">

    <h1 class="govuk-label-wrapper">
        <label class="govuk-label govuk-label--m" for="question-@Model.Id">
            @Model.Title @(Model.Required ? "" : "(optional)")
        </label>
    </h1>

    <div id="question-@Model.Id-hint" class="govuk-hint">
        @Model.Hint
    </div>

    @{
        string htmlId = $"question-{Model.Id}";
    }

    @if (Model.Type == QuestionType.Text.ToString())
    {
        <input class="govuk-input"
               id="@htmlId"
               type="text"
               aria-describedby="question-@Model.Id-hint"
               autocomplete="off">
    }

    else if (Model.Type == QuestionType.TextArea.ToString())
    {
        <textarea class="govuk-textarea"
                  id="@htmlId"
                  type="text"
                  aria-describedby="question-@Model.Id-hint"></textarea>
    }
    @if (Model.Type == QuestionType.Number.ToString())
    {
        <input class="govuk-input govuk-input--width-20"
               id="@htmlId"
               type="number"
               inputmode="numeric"
               aria-describedby="question-@Model.Id-hint"
               autocomplete="off">
    }
    else if (Model.Type == QuestionType.Radio.ToString())
    {
        <div class="govuk-radios" data-module="govuk-radios">

            @foreach (var option in Model.Options ?? [])
            {
                <div class="govuk-radios__item" id="@htmlId">
                    <input class="govuk-radios__input" id="@htmlId-@option.Id" type="radio" value="@option.Id">
                    <label class="govuk-label govuk-radios__label" for="@htmlId-@option.Id">
                        @option.Value
                    </label>
                </div>
            }
        </div>
    }
    else if (Model.Type == QuestionType.MultiChoice.ToString())
    {
        <div class="govuk-checkboxes" data-module="govuk-checkboxes">

            @foreach (var option in Model.Options ?? [])
            {
                <div class="govuk-checkboxes__item" id="@htmlId">
                    <input class="govuk-checkboxes__input" id="@htmlId-@option.Id" type="checkbox" value="@option.Id">
                    <label class="govuk-label govuk-checkboxes__label" for="@htmlId-@option.Id">
                        @option.Value
                    </label>
                </div>
            }
        </div>
    }
    else if (Model.Type == QuestionType.Date.ToString())
    {

        var dateInputModel = new GdsDateInputViewModel()
                {
                    Id = Model.Id.ToString(),
                };

        await Html.RenderPartialAsync("GdsComponents/_GdsDateInput", dateInputModel);
    }
    else if (Model.Type == QuestionType.File.ToString())
    {
        <input class="govuk-file-upload" id="@htmlId" type="file" multiple>
    }

    @if (!string.IsNullOrEmpty(Model.HelperHTML))
    {
        string helperClass = Model.Type == QuestionType.TextArea.ToString() ? "" : "helper-details";
        <details class="govuk-details @helperClass">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Help
                </span>
            </summary>
            <div class="govuk-details__text">
                @Html.Raw(Model.HelperHTML)
            </div>
        </details>
    }

</div>
